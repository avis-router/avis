About Avis
======================================================================

Avis is an event router service compatible with the commercial Elvin
implementation developed by Mantara Software. Avis provides a
general-purpose, scalable publish/subscribe message bus using
content-based subscriptions.

Elvin is a flexible event router that allows arbitrary messages
(a.k.a.  *notifications*) to be exchanged via a publish/subscribe
model. Elvin clients subscribe to messages using expressions that
match messages by their content, an approach that differs from most
other message bus systems that operate by selecting messages published
on pre-defined channels. Elvin routers can also be federated to
construct high-efficiency, wide-area event networks.

The name "Avis" derives from the French word *avis*, meaning advice or
notification.


Applications
----------------------------------------------------------------------

Current uses for Elvin include providing the message bus for [instant
messaging and virtual presence][tickertape.org], device coordination
for smart meeting rooms and [distributed speech transcription for
meetings][AuTM]. It has also been used extensively by Mantara for
high-volume financial transaction routing.

Elvin has picked up in so many applications because of its lightweight
approach and flexibility. See the [examples][] page to see how it can
be employed.


Current Status
----------------------------------------------------------------------

Avis is currently at a stage where it is usable as a drop-in
replacement for Mantara's `elvind` if quench and federation are not
required.

Future development items include:

 * A Java client library providing a similar capability to Mantara's
   `je4` library. At this stage, Avis is only useful as a router for
   existing Elvin clients using Mantara's client programming
   libraries. This library will be released under the LGPL (Avis is
   GPL).

 * An `ewafd`-style federator to tide users over until real federation
   is implemented. This style of federation essentially federates
   using a special client to exchange notifications between
   servers.

 * Implementing the *quench* API for allowing producers to discover
   what clients are listening for.


History
----------------------------------------------------------------------

Elvin orginated at the [Distributed Systems Technology
Centre][DSTC_wikipedia] (DSTC), a part government, part commercial
Cooperative Research Centre, which operated from 1992 until June,
2006. Elvin was rapidly picked up internally by DSTC projects and
several of DSTC's partners such as the [Australian Defence Science and
Technology Organisation][DSTO] (DSTO) due to its ability to provide a
highly reliable, fast, federated communication bus and became deployed
in a variety of contexts.

Mantara Software was spun off from DSTC as a commercial entity in 2003
to develop Elvin as a product. When Mantara announced it would stop
offering Elvin as a standalone product at the end of 2007, Matthew
Phillips, the author of Avis, began to implement the Elvin open
specifications at [elvin.org][] to allow DSTO and other interested
organisations to continue developing systems using the Elvin message
bus.

Contacts
----------------------------------------------------------------------

The author can be contacted at `avis at mattp.name` or `phillipsm at
users.sourceforge.net` (replace "at" with "@").


[DSTC_wikipedia]: http://en.wikipedia.org/wiki/Distributed_Systems_Technology_Centre
[DSTO]: http://www.dsto.defence.gov.au
[elvin.org]: http://elvin.org
[AuTM]: http://www.dsto.defence.gov.au/publications/2595/
[tickertape.org]: http://tickertape.org
[examples]: examples.html
