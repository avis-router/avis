/*
 *  elvin.h
 *
 *  Elvin Client Library
 *  Main Public Definitions.
 */

#ifndef ELVIN_H
#define ELVIN_H

#include <stdbool.h>
#include <stdint.h>

#define DEFAULT_ELVIN_PORT 2917

typedef struct Elvin_t
{
  int socket;
} Elvin;

typedef struct Elvin_Error_t
{
  int code;
  const char *message;
} Elvin_Error;

typedef struct Elvin_URL_t
{
  const char *host;
  uint16_t port;
} Elvin_URL;

bool elvin_open (Elvin *elvin, const char *router_url, Elvin_Error *error);
bool elvin_open_url (Elvin *elvin, Elvin_URL *url, Elvin_Error *error);
bool elvin_close (Elvin *elvin);

bool elvin_url_from_string (Elvin_URL *url, const char *url_string, 
                            Elvin_Error *error);

#define ELVIN_HOST_ERROR_BASE 10000
#define ELVIN_ERROR_BASE 20000
#define ELVIN_ERROR_CONNECTION_CLOSED (ELVIN_ERROR_BASE + 0)

/*
 * Convert the h_errno error code generated by gethostbyname () etc to
 * an error code. 
 */
#define HOST_TO_ELVIN_ERROR(code) (ELVIN_HOST_ERROR_BASE + code)

void elvin_perror (const char *tag, Elvin_Error *error);
bool elvin_error_from_errno (Elvin_Error *error);
bool elvin_error_set (Elvin_Error *error, int code, const char *message);
bool elvin_error_assert (Elvin_Error *error, bool condition, 
                         int code, const char *message);

#endif ELVIN_H
