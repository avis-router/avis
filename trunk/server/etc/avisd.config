##
# Avis router configuration.
#
# This file contains configuration settings for the Avis event
# router. Uncomment and modify settings as required.
#
# For numeric values, the suffixes "K" and "M" may be used to indicate
# units of 1 kilobyte (1024 / 2^10 bytes) and 1 megabyte (1,048,576 /
# 2^20 bytes) respectively.
#
# For boolean (true/false) values, "true" or "yes" may be used in
# place of "1", "false" or "no" may be used in place of "0".
##

######################################################################
# Router options
######################################################################

# The default port to run Avis service on. This may be overridden by
# an explicit port setting in the Listen URI's set below.

# Port=2917

# Specifies which network addresses the Avis router listens on. This
# option contains one or more whitespace-separated Elvin URI's
# specifying a network address and a protocol.
#
# Using the wildcard address "0.0.0.0" binds to all IPv4 and IPv6
# addresses. Using "!" as a prefix in the host name selects all
# addresses on a network interface rather than associated with a host
# name or IP (e.g. "elvin://!eth0:1234").
#
# Examples:
#   Listen=elvin://hostname:1234
#   Listen=elvin:/tcp,none,xdr/!eth0:1234
#   Listen=elvin:/tcp,none,xdr/hostname:1234 \
#          elvin:/ssl,none,xdr/171.4.87.72:4567

# Listen=elvin://0.0.0.0

######################################################################
# Federation
######################################################################

# Set to yes/true to activate federation.

# Federation.Activated: no

# The globally-unique name for this router. This should usually be
# your host's DNS name or IP address. This defaults to the router's
# host name, but it recommended you set this manually.

# Federation.Router-Name: your-router-hostname.com

# The addresses and protocols to listen to for incoming federation
# connections. The ewaf: URI's used in this field have the same
# semantics as the elvin: URI's in the Listen field.

# Federation.Listen=ewaf:/tcp,none,xdr/0.0.0.0:2916,\
#                   ewaf://0.0.0.0:28000

# Set the subscription expression that is used to subscribe to
# notifications from the remote router for the given federation
# class. As well as a normal subscription expression, this can be
# "FALSE" to subscribe to nothing.

# Federation.Subscribe:Public = require (Message) && From != 'internal'
# Federation.Subscribe:Internal = require (Message)

# Set the subscription expression that is used to filter outgoing
# notifications for the given federation class. This expression can be
# used to restrict what a remote router can subscribe to. As well as a
# normal subscription expression, this can also be "FALSE" to provide
# nothing, or "TRUE" to provide anything the remote router subscribes
# to.

# Federation.Provide:Public = require (Message)
# Federation.Provide:Internal = TRUE

# The Federation.Listen settings maps host names, addresses or router
# names of incoming connections to federation classes. If the right
# hand side starts with "@", it refers to an IP address
# ("@121.185.2.6"), host name (e.g. "@myhost.somewhere.com"), or a
# domain name postfix (e.g. "@.somewhere.com"). Otherwise, the right
# hand side is the router's name (Federation.Router-Name).
#
# If a federator tries to connect to this router and there is no
# mapping to a federation class for it, it will be refused connection.

# Federation.Listen:Public = @.elvin.org
# Federation.Listen:Internal = my_router_name

# Instructs the router to attempt to connect to a remote federation
# endpoint using a given federation class.

# Federation.Connect:Public = ewaf:/tcp,none,xdr/public.elvin.org:2916
# Federation.Connect:Internal = ewaf://internal-host:2916

# Amount of time that must pass before the router assumes that the
# remote federator is not responding to a request. The router will
# keep trying to connect.

# Federation.Connect-Timeout = 20

# TODO

# Federation.Add-Attribute Public From-External=1
#  or
# Federation.Add-Attribute:Public:From-External=1

# Federation.Add-Attribute:Internal:From-External 0
# Federation.Add-Attribute:Internal:Federation-Class "internal"

# NOT IMPLEMENTED

# Federation.Keepalive-Interval = 60
# Federation.Classes.Require=internal
# Federation.Allow.Address
# Federation.Allow.Domain
# Federation.Allow.ID

###################################################################### 
# Default client connection options
######################################################################

# Avis-specific connection options
# --------------------------------------------------------------------

# Max number of connection keys per connection.
# 
# Range: 0 - 1K

# Connection.Max-Keys=1K

# Max number of keys for a subscription.
#
# Range: 0 - 1K

# Subscription.Max-Keys=256

# Standard options
# --------------------------------------------------------------------

# Max packet length acceptable from a client.
#
# Range: 1K - 10M

# Packet.Max-Length=1M

# Maximum number of subscriptions allowed by a single client. 
#
# Range: 16 - 2K

# Subscription.Max-Count=2K

# Maximum length, in bytes, of any subscription expression.
#
# Range: 1K - 4K

# Subscription.Max-Length=2K

# The maximum size of the router's per-client incoming packet queue,
# in bytes. If the queue exceeds this size, the router will throttle
# the data stream from the client until the queue drops below this
# value. NOTE: Avis does not currently implement packet dropping as
# specified by Receive-Queue.Drop-Policy, so this throttling behaviour
# differs slightly from the Elvin router specification in that packets
# will be throttled rather than dropped.
#
# Range: 1K - 1MB

# Receive-Queue.Max-Length=1M

# Set whether the TCP NO_DELAY flag is enabled for sockets on the
# server side. 1 = send immediately (TCP NO_DELAY = true), 0 = do not
# necessarily send immediately, buffer data for optimal throughput
# (TCP NO_DELAY = false). Set this to 1 if you experience lag with
# "real time" applications that require minimal delivery latency, but
# note that this may result in an overall reduction in throughput.
#
# Range: 0 - 1

# TCP.Send-Immediately=0

####### Options below are not implemented yet #######

# Currently a number of connection options are not implemented by
# Avis. You can set them, but they will not be enforced by the server
# yet. The pseudo-value "MAX" used below means bounded only by
# whatever the server can handle in terms of memory and other
# resources.

# The maximum number of attributes on a notification.
#
# Range: 16-MAX 

# Attribute.Max-Count=MAX

# Maximum length, in bytes, of an attribute name.
#
# Range: 64-MAX

# Attribute.Name.Max-Length=MAX

# Maximum length, in bytes, for opaque values.
#
# Range: 1024-MAX

# Attribute.Opaque.Max-Length=MAX

# Maximum length, in bytes, for opaque values.  Note that this value
# is not the number of characters: some characters may take up to 5
# bytes to represent in UTF-8 encoding.
#
# Range: 1024-MAX

# Attribute.String.Max-Length=MAX

# This property describes the desired behaviour of the router's packet
# receive queue if it exceeds the negotitated maximum size.
#
# Values: "oldest", "newest", "largest", "fail"

# Receive-Queue.Drop-Policy="oldest"

# This property describes the desired behaviour of the router's packet
# send queue if it exceeds the negotitated maximum size.
#
# Values: "oldest", "newest", "largest", "fail"

# Send-Queue.Drop-Policy=oldest

# The maximum length (in bytes) of the routers send queue.
#
# Range: 1024-MAX

# Send-Queue.Max-Length=MAX
