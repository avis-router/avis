##
# Avis router configuration.
#
# This file contains configuration settings for the Avis event
# router. Uncomment and modify settings as required.
#
# For numeric values, the suffixes "K" and "M" may be used to indicate
# units of 1024 (2^10) bytes and 1,048,576 (2^20) bytes respectively.
##

# The port to run Avis service on. This may be overridden by an
# explicit port setting in the Listen URI's set below.

# Port=2917

# Set which network addresses the Avis router listens on. This option
# contains one or more comma-separated Elvin URI's specifying a
# network addresss and a protocol. Using the wildcard address
# "0.0.0.0" binds to all IPv4 and IPv6 addresses. Using "!" as a
# prefix in the name selects all addresses on a network interface
# rather than associated with a host name or IP
# (e.g. "elvin://!eth0:1234").
#
# Examples:
#   Listen=elvin://hostname:1234
#   Listen=elvin:/tcp,none,xdr/!eth0:1234
#   Listen=elvin:/tcp,none,xdr/hostname:1234,\
#          elvin:/ssl,none,xdr/171.4.87.72:4567

# Listen=elvin://0.0.0.0

## 
# Default options for client connections
##

# Avis-specific connection options

# Max number of connection keys per connection.
# 
# Range: 0 - 1K

# Connection.Max-Keys=1K

# Max number of keys for a subscription.
#
# Range: 0 - 1K

# Subscription.Max-Keys=256

# Standard options

# Max packet length acceptable from a client.
#
# Range: 1K - 10M

# Packet.Max-Length=1M

# Maximum number of subscriptions allowed by a single client. 
#
# Range: 16 - 2K

# Subscription.Max-Count=2K

# Maximum length, in bytes, of any subscription expression.
#
# Range: 1K - 4K

# Subscription.Max-Length=2K

# The maximum size of the router's per-client incoming packet queue,
# in bytes. If the queue exceeds this size, the router will throttle
# the data stream from the client until the queue drops below this
# value. NOTE: Avis does not currently implement packet dropping as
# specified by Receive-Queue.Drop-Policy, so this throttling behaviour
# differs slightly from the Elvin router specification in that packets
# will be throttled rather than dropped.
#
# Range: 1K - 1MB

# Receive-Queue.Max-Length=1M

# Set whether the TCP NO_DELAY flag is enabled for sockets on the
# server side. 1 = send immediately (TCP NO_DELAY = true), 0 = do not
# necessarily send immediately, buffer data for optimal throughput
# (TCP NO_DELAY = false). Set this to 1 if you experience lag with
# "real time" applications that require minimal delivery latency, but
# note that this may result in an overall reduction in throughput.
#
# Range: 0 - 1

# TCP.Send-Immediately=0

####### Options below are not implemented yet #######

# Currently a number of connection options are not implemented by
# Avis. You can change them, but they will not be enforced by the
# server. The pseudo-value "MAX" used below means bounded only by
# whatever the server can handle in terms of memory and other
# resources.

# The maximum number of attributes on a notification.
#
# Range: 16-MAX 

# Attribute.Max-Count=MAX

# Maximum length, in bytes, of an attribute name.
#
# Range: 64-MAX

# Attribute.Name.Max-Length=MAX

# Maximum length, in bytes, for opaque values.
#
# Range: 1024-MAX

# Attribute.Opaque.Max-Length=MAX

# Maximum length, in bytes, for opaque values.  Note that this value
# is not the number of characters: some characters may take up to 5
# bytes to respresent using the require UTF-8 encoding.
#
# Range: 1024-MAX

# Attribute.String.Max-Length=MAX

# This property describes the desired behaviour of the router's packet
# receive queue if it exceeds the negotitated maximum size.
#
# Values: "oldest", "newest", "largest", "fail"

# Receive-Queue.Drop-Policy="oldest"

# This property describes the desired behaviour of the router's packet
# send queue if it exceeds the negotitated maximum size.
#
# Values: "oldest", "newest", "largest", "fail"

# Send-Queue.Drop-Policy=oldest

# The maximum length (in bytes) of the routers send queue.
#
# Range: 1024-MAX

# Send-Queue.Max-Length=MAX
