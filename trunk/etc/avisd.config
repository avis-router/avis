##
# Avis service configuration.
#
# This file contains configuration settings for the Avis event router
# daemon. Uncomment and modify settings as required.
#
# For numeric values, the suffixes "K" and "M" may be used to indicate
# units of 1024 (2^10) and 1,048,576 (2^20) bytes respectively.
##

# The port to run Avis service on.
# Port=2917

# Set which network addresses the Avis router binds to. The default is
# "*" which binds to all IPv4 and IPv6 addresses. Bind.Hosts uses host
# name(s) to select addresses while Bind.Interfaces uses interface
# names (e.g. "en1") to select addresses. Each item can contain one or
# more comma-separated name[:port] items.
#
# e.g.:
#   Bind.Hosts=hostname1,hostname2:29170
#   Bind.Interfaces=en1,en2:29170

# Bind.Hosts=*
# Bind.Interfaces=*

## 
# Defaults options for client connections
##

# Avis-specific options

# Max number of connection-wide keys.
# Range: 0 - 1K
# Connection.Max-Keys=1K

# Max number of keys for a subscription.
# Range: 0 - 1K
# Subscription.Max-Keys=256

# Standard options

# Max packet length acceptable from a client.
# Range: 1K - 10M
# Packet.Max-Length=1M

# Maximum number of subscriptions allowed by a single client. 
# Range: 16 - 2K
# Subscription.Max-Count=2K

# Maximum allows length, in bytes, of any subscription expression.
# Range: 1K - 4K
# Subscription.Max-Length=2K

# This property sets a maximum size of the router's per-client
# incoming packet queue, in bytes. If the queue exceeds this size, the
# router will throttle the data stream from the client until the queue
# drops below this value. NOTE: Avis does not currently implement
# packet dropping (see Receive-Queue.Drop-Policy), and this behaviour
# differs slightly from the Elvin router specification in that packets
# will be throttled rather than dropped.
# Range: 1K - 1MB
# Receive-Queue.Max-Length=1M

# Set whether the TCP NO_DELAY flag is enabled for sockets on the
# server side. 1 = send immediately (TCP NO_DELAY = true), 0 = do not
# necessarily send immediately, buffer data for optimal throughput
# (TCP NO_DELAY = false). Set this to 1 if you experience lag with
# "real time" applications that require minimal delivery latency.
# Range: 0 - 1
# TCP.Send-Immediately=0

# Currently a number of connection options are not implemented by
# Avis. You can change them, but they will not be enforced by the
# server. The pseudo value "MAX" used below means bounded only by
# whatever the server can handle in terms of memory and other
# resources.

# Options below are not implemented yet.

# The maximum number of attributes on a notification.
# Range: 16-MAX 
# Attribute.Max-Count=MAX

# Maximum length, in bytes, of an attribute name.
# Range: 64-MAX
# Attribute.Name.Max-Length=MAX

# Maximum length, in bytes, for opaque values.
# Range: 1024-MAX
# Attribute.Opaque.Max-Length=MAX

# Maximum length, in bytes, for opaque values.  Note that this value
# is not the number of characters: some characters may take up to 5
# bytes to respresent using the require UTF-8 encoding.
# Range: 1024-MAX
# Attribute.String.Max-Length=MAX

# This property describes the desired behaviour of the router's packet
# receive queue if it exceeds the negotitated maximum size.
# Values: "oldest", "newest", "largest", "fail"
# Receive-Queue.Drop-Policy="oldest"

# This property describes the desired behaviour of the router's packet
# send queue if it exceeds the negotitated maximum size.
# Values: "oldest", "newest", "largest", "fail"
# Send-Queue.Drop-Policy=oldest

# The maximum length (in bytes) of the routers send queue.
# Range: 1024-MAX
# Send-Queue.Max-Length=MAX
