#ifndef ERRORS_H_
#define ERRORS_H_

#include <stdbool.h>

typedef struct
{
  int code;
  const char *message;
} Elvin_Error;

#define ELVIN_HOST_ERROR_BASE 10000
#define ELVIN_ERROR_BASE 20000
#define ELVIN_ERROR_CONNECTION_CLOSED (ELVIN_ERROR_BASE + 0)

/*
 * Convert the h_errno error code generated by gethostbyname () etc to
 * an error code. 
 */
#define HOST_TO_ELVIN_ERROR(code) (ELVIN_HOST_ERROR_BASE + code)

void elvin_perror (const char *tag, Elvin_Error *error);
bool elvin_error_from_errno (Elvin_Error *error);
bool elvin_error_set (Elvin_Error *error, int code, const char *message);
bool elvin_error_assert (Elvin_Error *error, bool condition, 
                         int code, const char *message);

#endif /*ERRORS_H_*/
